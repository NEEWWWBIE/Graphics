#include <scanfill.h>

void init()
{
}

void setPixel (int x, int y)
{
	glColor3ub (255,0,0); // activate the pixel by setting the point color to white
	glBegin (GL_POINTS);
		glVertex2i (x, y);	// set the point
	glEnd ();
}

void endpoints(float x1,float y1,float x2,float y2,int* left,int* right)
{
    float temp,x,m_1;

    if (y1>y2)
    {
        //swap the values
        temp = x1;x1=x2;x2=temp;
        temp = y1;y1=y2;y2=temp;
    }

    if (y1==y2)
        m_1 = x2-x1;
    else
        m_1 = (x2-x1)/(y2-y1);

    x = x1;
    for (int j=(int)y1;j<(int)y2;j++)
    {
        if (x<left[j]) left[j]=x;
        if (x>right[j]) right[j]=x; // ie the index holds the value of the ordinate, while at the corresponding point in the left array= x min and of the right array = x max
        x+=m_1; // x incremented according to the slopw
    }

}

void scanfill(float x1,float y1,float x2,float y2,float x3,float y3,float x4,float y4)
{
    int left[800],right[800];

    for (int i=0; i<800; i++)
    {
        left[i]=800;right[i]=0;
    }

    endpoints(x1,y1,x2,y2,left,right);
    endpoints(x2,y2,x3,y3,left,right);
    endpoints(x3,y3,x4,y4,left,right);
    endpoints(x4,y4,x1,y1,left,right); // betwenn the y values corresponding x min and x max are calculated

    for (int y=0;y<800;y++)
    {
        if (left[y]<=right[y])
            for (int x=left[y];x<=right[y];x++)
            setPixel(x,y);
    }

}

void display()
{
    x1 = 0.0; y1 = 0.0;x2 = 50.0,y2 = 0.0;x3=50.0, y3=50.0, x4=0.0, y4=50.0;
    glColor3ub(255,255,255);
    glBegin(GL_LINE_LOOP);
    glVertex2d(x1,y1);
    glVertex2d(x2,y2);
    glVertex2d(x3,y3);
    glVertex2d(x4,y4);
    glEnd();

    scanfill(x1,y1,x2,y2,x3,y3,x4,y4);

    glFlush();
}

int main(int argc,char **argv)
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutInitWindowSize(800,650);

    glutCreateWindow("scan line");
    glutDisplayFunc(display);

    init();
    glutMainLoop();

    return 0;
}
